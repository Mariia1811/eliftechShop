{"version":3,"file":"static/js/703.bed022a6.chunk.js","mappings":"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","sources":["conts/const.js","webpack://eliftech-shop/./src/pages/ShoppingCartPage/ShoppingCartPage.module.scss?e22e","pages/ShoppingCartPage/ShoppingCartPage.jsx","redux/shop/shopSelectot.js"],"sourcesContent":["export const baseUrl = 'https://shopfoodsukraine.onrender.com';","// extracted by mini-css-extract-plugin\nexport default {\"containerPage\":\"ShoppingCartPage_containerPage__qMcP9\",\"sectionForm\":\"ShoppingCartPage_sectionForm__5bWX0\",\"formList\":\"ShoppingCartPage_formList__7IODq\",\"label\":\"ShoppingCartPage_label__pT3uV\",\"input\":\"ShoppingCartPage_input__ONm1g\",\"sectionBasket\":\"ShoppingCartPage_sectionBasket__h7IP9\",\"boxes\":\"ShoppingCartPage_boxes__DWyZJ\",\"basketList\":\"ShoppingCartPage_basketList__bkLJG\",\"item\":\"ShoppingCartPage_item__j7MQo\",\"image\":\"ShoppingCartPage_image__iyg1t\",\"description\":\"ShoppingCartPage_description__KvFV3\",\"title\":\"ShoppingCartPage_title__bXfD9\",\"price\":\"ShoppingCartPage_price__fZeZ0\",\"boxTotal\":\"ShoppingCartPage_boxTotal__+MHb2\",\"btn\":\"ShoppingCartPage_btn__j+eLo\"};","import { useEffect, useState } from 'react';\nimport { baseUrl } from '../../conts/const';\nimport s from './ShoppingCartPage.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBasketId, getOrderFoodsList } from 'redux/shop/shopSelectot';\nimport { getProductsById, submitOrder } from 'redux/shop/operation';\n\nconst initialState = {\n  name: '', \n  email: '',\n  phone: '',\n  address: '',\n};\n\nconst ShoppingCartPage = () => {\n  const basketIdList = useSelector(getBasketId);\n  const orderFoodsListfromState = useSelector(getOrderFoodsList);\n\n  const [dataOrder, setDataOrder] = useState(initialState);\n  const [dataOrderforSubmit, setDataOrderforSubmit] = useState(null);\n  const [orderFoodsList, setOrderFoodsList] = useState(orderFoodsListfromState);\n  const [totalSum, settotalSum] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (basketIdList?.length > 0) {\n      basketIdList?.map(item => dispatch(getProductsById(item)));\n    }\n    setOrderFoodsList(orderFoodsListfromState);\n    const sumOrder = orderFoodsListfromState.reduce(\n      (sum, item) => sum + item.price,\n      0\n    );\n    settotalSum(sumOrder);\n  }, [basketIdList, orderFoodsListfromState, dispatch]);\n\n  useEffect(() => {\n    if (dataOrderforSubmit) {\n      dispatch(submitOrder(dataOrderforSubmit));\n       \n    }\n  \n}, [dataOrderforSubmit, dispatch]);\n\n  const handleChange = e => {\n  const { name, value } = e.target;\n  setDataOrder(pS => ({\n    ...pS,\n    [name]: value,\n  }));\n};\n\n  function handleChangeQuantity(id, e) {\n    const updatedOrderFoodsList = orderFoodsList.map(item => {\n      if (item._id === id) {\n        return {\n          ...item,\n          quantity: e.target.value,\n        };\n      }\n      return item;\n    });\n\n    setOrderFoodsList(updatedOrderFoodsList);\n   \n  const newTotalSum = updatedOrderFoodsList.reduce((sum, item) => {\n    return sum + item.price * item.quantity;\n  }, 0);\n\n  settotalSum(newTotalSum);\n  }\n\n  function handleSubmit() {\n    setDataOrderforSubmit({ ...dataOrder, order: [...orderFoodsList], total: totalSum })\n     \n  }\n\n  if (orderFoodsList)\n    return (\n      <div className={s.containerPage}>\n        <div className={s.sectionForm}>\n          <form className={s.formList}>\n            <div className={s.overInput}>\n              <label htmlFor=\"name\" className={s.label}>\n                Name:\n              </label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={dataOrder.name}\n                className={s.input}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className={s.overInput}>\n              <label htmlFor=\"email\" className={s.label}>\n                Email:\n              </label>\n              <input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={dataOrder.email}\n                className={s.input}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className={s.overInput}>\n              <label htmlFor=\"phone\" className={s.label}>\n                Phone:\n              </label>\n              <input\n                id=\"phone\"\n                type=\"tel\"\n                placeholder=\"Phone\"\n                name=\"phone\"\n                value={dataOrder.phone}\n                className={s.input}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className={s.overInput}>\n              <label htmlFor=\"address\" className={s.label}>\n                Address:\n              </label>\n              <input\n                id=\"address\"\n                type=\"text\"\n                placeholder=\"Address\"\n                name=\"address\"\n                value={dataOrder.address}\n                className={s.input}\n                onChange={handleChange}\n              />\n            </div>\n          </form>\n        </div>\n        <div className={s.sectionBasket}>\n          <div className={s.boxes}>\n            <ul className={s.basketList}>\n              {orderFoodsList?.length > 0 &&\n                orderFoodsList?.map(food => (\n                  <li className={s.item} key={food._id}>\n                    <img\n                      src={`${baseUrl}/${food.img}`}\n                      alt=\"dish\"\n                      className={s.image}\n                    />\n                    <div className={s.description}>\n                      <p className={s.title}>{food.name}</p>\n                      <p className={s.price}>\n                        Price: <span>{food.price}</span>\n                      </p>\n                      <input\n                        type=\"number\"\n                        min={0}\n                        placeholder=\"Quantity\"\n                        name={`${food._id}`}\n                        value={\n                          orderFoodsList.find(item => item._id === food._id)\n                            ?.quantity || '1'\n                        }\n                        onChange={e =>\n                          handleChangeQuantity(food._id, e)\n                        }\n                        className={s.input}\n                      />\n                    </div>\n                  </li>\n                ))}\n            </ul>\n            <div className={s.boxTotal}>\n              <p className={s.price}>\n                Total price: <span>{totalSum}</span>\n              </p>\n              <button className={s.btn} onClick={handleSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n};\n\nexport default ShoppingCartPage;\n","export const getAllList = state => state.shops.foods;\nexport const getBasketId = state => state.shops.basketId;\nexport const getOrderFoodsList = state => state.shops.orderFoodsList;\n"],"names":["baseUrl","initialState","name","email","phone","address","basketIdList","useSelector","getBasketId","orderFoodsListfromState","getOrderFoodsList","useState","dataOrder","setDataOrder","dataOrderforSubmit","setDataOrderforSubmit","orderFoodsList","setOrderFoodsList","totalSum","settotalSum","dispatch","useDispatch","useEffect","length","map","item","getProductsById","sumOrder","reduce","sum","price","submitOrder","handleChange","e","target","value","pS","className","s","htmlFor","id","type","placeholder","onChange","food","src","img","alt","min","_id","find","quantity","updatedOrderFoodsList","newTotalSum","handleChangeQuantity","onClick","order","total","getAllList","state","shops","foods","basketId"],"sourceRoot":""}